# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Microsoftgraphteam(Model):
    """Microsoftgraphteam.

    :param id:
    :type id: str
    :param display_name:
    :type display_name: str
    :param description:
    :type description: str
    :param internal_id:
    :type internal_id: str
    :param classification:
    :type classification: str
    :param specialization: Possible values include: 'none',
     'educationStandard', 'educationClass',
     'educationProfessionalLearningCommunity', 'educationStaff',
     'healthcareStandard', 'healthcareCareCoordination', 'unknownFutureValue'
    :type specialization: str or ~users.models.enum
    :param visibility: Possible values include: 'private', 'public',
     'hiddenMembership', 'unknownFutureValue'
    :type visibility: str or ~users.models.enum
    :param web_url:
    :type web_url: str
    :param member_settings:
    :type member_settings: ~users.models.MicrosoftgraphteamMemberSettings
    :param guest_settings:
    :type guest_settings: ~users.models.MicrosoftgraphteamGuestSettings
    :param messaging_settings:
    :type messaging_settings:
     ~users.models.MicrosoftgraphteamMessagingSettings
    :param fun_settings:
    :type fun_settings: ~users.models.MicrosoftgraphteamFunSettings
    :param discovery_settings:
    :type discovery_settings:
     ~users.models.MicrosoftgraphteamDiscoverySettings
    :param is_archived:
    :type is_archived: bool
    :param schedule:
    :type schedule: ~users.models.Microsoftgraphschedule
    :param photo:
    :type photo: ~users.models.MicrosoftgraphprofilePhoto
    :param template:
    :type template: ~users.models.MicrosoftgraphteamsTemplate
    :param channels:
    :type channels: list[~users.models.Microsoftgraphchannel]
    :param apps:
    :type apps: list[~users.models.MicrosoftgraphteamsCatalogApp]
    :param installed_apps:
    :type installed_apps:
     list[~users.models.MicrosoftgraphteamsAppInstallation]
    :param operations:
    :type operations: list[~users.models.MicrosoftgraphteamsAsyncOperation]
    :param owners:
    :type owners: list[~users.models.Microsoftgraphuser]
    :param primary_channel:
    :type primary_channel: ~users.models.Microsoftgraphchannel
    :param group:
    :type group: ~users.models.Microsoftgraphgroup
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'internal_id': {'key': 'internalId', 'type': 'str'},
        'classification': {'key': 'classification', 'type': 'str'},
        'specialization': {'key': 'specialization', 'type': 'str'},
        'visibility': {'key': 'visibility', 'type': 'str'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
        'member_settings': {'key': 'memberSettings', 'type': 'MicrosoftgraphteamMemberSettings'},
        'guest_settings': {'key': 'guestSettings', 'type': 'MicrosoftgraphteamGuestSettings'},
        'messaging_settings': {'key': 'messagingSettings', 'type': 'MicrosoftgraphteamMessagingSettings'},
        'fun_settings': {'key': 'funSettings', 'type': 'MicrosoftgraphteamFunSettings'},
        'discovery_settings': {'key': 'discoverySettings', 'type': 'MicrosoftgraphteamDiscoverySettings'},
        'is_archived': {'key': 'isArchived', 'type': 'bool'},
        'schedule': {'key': 'schedule', 'type': 'Microsoftgraphschedule'},
        'photo': {'key': 'photo', 'type': 'MicrosoftgraphprofilePhoto'},
        'template': {'key': 'template', 'type': 'MicrosoftgraphteamsTemplate'},
        'channels': {'key': 'channels', 'type': '[Microsoftgraphchannel]'},
        'apps': {'key': 'apps', 'type': '[MicrosoftgraphteamsCatalogApp]'},
        'installed_apps': {'key': 'installedApps', 'type': '[MicrosoftgraphteamsAppInstallation]'},
        'operations': {'key': 'operations', 'type': '[MicrosoftgraphteamsAsyncOperation]'},
        'owners': {'key': 'owners', 'type': '[Microsoftgraphuser]'},
        'primary_channel': {'key': 'primaryChannel', 'type': 'Microsoftgraphchannel'},
        'group': {'key': 'group', 'type': 'Microsoftgraphgroup'},
    }

    def __init__(self, id=None, display_name=None, description=None, internal_id=None, classification=None, specialization=None, visibility=None, web_url=None, member_settings=None, guest_settings=None, messaging_settings=None, fun_settings=None, discovery_settings=None, is_archived=None, schedule=None, photo=None, template=None, channels=None, apps=None, installed_apps=None, operations=None, owners=None, primary_channel=None, group=None):
        super(Microsoftgraphteam, self).__init__()
        self.id = id
        self.display_name = display_name
        self.description = description
        self.internal_id = internal_id
        self.classification = classification
        self.specialization = specialization
        self.visibility = visibility
        self.web_url = web_url
        self.member_settings = member_settings
        self.guest_settings = guest_settings
        self.messaging_settings = messaging_settings
        self.fun_settings = fun_settings
        self.discovery_settings = discovery_settings
        self.is_archived = is_archived
        self.schedule = schedule
        self.photo = photo
        self.template = template
        self.channels = channels
        self.apps = apps
        self.installed_apps = installed_apps
        self.operations = operations
        self.owners = owners
        self.primary_channel = primary_channel
        self.group = group
