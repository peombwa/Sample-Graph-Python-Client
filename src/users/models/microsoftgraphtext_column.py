# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MicrosoftgraphtextColumn(Model):
    """textColumn.

    :param allow_multiple_lines:
    :type allow_multiple_lines: bool
    :param append_changes_to_existing_text:
    :type append_changes_to_existing_text: bool
    :param lines_for_editing:
    :type lines_for_editing: int
    :param max_length:
    :type max_length: int
    :param text_type:
    :type text_type: str
    """

    _validation = {
        'lines_for_editing': {'maximum': 2147483647, 'minimum': -2147483648},
        'max_length': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'allow_multiple_lines': {'key': 'allowMultipleLines', 'type': 'bool'},
        'append_changes_to_existing_text': {'key': 'appendChangesToExistingText', 'type': 'bool'},
        'lines_for_editing': {'key': 'linesForEditing', 'type': 'int'},
        'max_length': {'key': 'maxLength', 'type': 'int'},
        'text_type': {'key': 'textType', 'type': 'str'},
    }

    def __init__(self, allow_multiple_lines=None, append_changes_to_existing_text=None, lines_for_editing=None, max_length=None, text_type=None):
        super(MicrosoftgraphtextColumn, self).__init__()
        self.allow_multiple_lines = allow_multiple_lines
        self.append_changes_to_existing_text = append_changes_to_existing_text
        self.lines_for_editing = lines_for_editing
        self.max_length = max_length
        self.text_type = text_type
