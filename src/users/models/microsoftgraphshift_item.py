# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MicrosoftgraphshiftItem(Model):
    """MicrosoftgraphshiftItem.

    :param start_date_time:
    :type start_date_time: datetime
    :param end_date_time:
    :type end_date_time: datetime
    :param theme: Possible values include: 'white', 'blue', 'green', 'purple',
     'pink', 'yellow', 'gray', 'darkBlue', 'darkGreen', 'darkPurple',
     'darkPink', 'darkYellow', 'unknownFutureValue'
    :type theme: str or ~users.models.enum
    :param display_name:
    :type display_name: str
    :param notes:
    :type notes: str
    :param activities:
    :type activities: list[~users.models.MicrosoftgraphshiftActivity]
    """

    _attribute_map = {
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
        'end_date_time': {'key': 'endDateTime', 'type': 'iso-8601'},
        'theme': {'key': 'theme', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'notes': {'key': 'notes', 'type': 'str'},
        'activities': {'key': 'activities', 'type': '[MicrosoftgraphshiftActivity]'},
    }

    def __init__(self, start_date_time=None, end_date_time=None, theme=None, display_name=None, notes=None, activities=None):
        super(MicrosoftgraphshiftItem, self).__init__()
        self.start_date_time = start_date_time
        self.end_date_time = end_date_time
        self.theme = theme
        self.display_name = display_name
        self.notes = notes
        self.activities = activities
