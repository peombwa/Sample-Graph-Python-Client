# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ComponentsschemasmicrosoftGraphWindowsdevicemalwarestateallof1(Model):
    """windowsDeviceMalwareState.

    Malware detection entity.

    :param display_name: Malware name
    :type display_name: str
    :param additional_information_url: Information URL to learn more about the
     malware
    :type additional_information_url: str
    :param severity: Possible values include: 'unknown', 'low', 'moderate',
     'high', 'severe'
    :type severity: str or ~users.models.enum
    :param catetgory: Possible values include: 'invalid', 'adware', 'spyware',
     'passwordStealer', 'trojanDownloader', 'worm', 'backdoor',
     'remoteAccessTrojan', 'trojan', 'emailFlooder', 'keylogger', 'dialer',
     'monitoringSoftware', 'browserModifier', 'cookie', 'browserPlugin',
     'aolExploit', 'nuker', 'securityDisabler', 'jokeProgram',
     'hostileActiveXControl', 'softwareBundler', 'stealthNotifier',
     'settingsModifier', 'toolBar', 'remoteControlSoftware', 'trojanFtp',
     'potentialUnwantedSoftware', 'icqExploit', 'trojanTelnet', 'exploit',
     'filesharingProgram', 'malwareCreationTool', 'remote_Control_Software',
     'tool', 'trojanDenialOfService', 'trojanDropper', 'trojanMassMailer',
     'trojanMonitoringSoftware', 'trojanProxyServer', 'virus', 'known',
     'unknown', 'spp', 'behavior', 'vulnerability', 'policy',
     'enterpriseUnwantedSoftware', 'ransom', 'hipsRule'
    :type catetgory: str or ~users.models.enum
    :param execution_state: Possible values include: 'unknown', 'blocked',
     'allowed', 'running', 'notRunning'
    :type execution_state: str or ~users.models.enum
    :param state: Possible values include: 'unknown', 'detected', 'cleaned',
     'quarantined', 'removed', 'allowed', 'blocked', 'cleanFailed',
     'quarantineFailed', 'removeFailed', 'allowFailed', 'abandoned',
     'blockFailed'
    :type state: str or ~users.models.enum
    :param threat_state: Possible values include: 'active', 'actionFailed',
     'manualStepsRequired', 'fullScanRequired', 'rebootRequired',
     'remediatedWithNonCriticalFailures', 'quarantined', 'removed', 'cleaned',
     'allowed', 'noStatusCleared'
    :type threat_state: str or ~users.models.enum
    :param initial_detection_date_time: Initial detection datetime of the
     malware
    :type initial_detection_date_time: datetime
    :param last_state_change_date_time: The last time this particular threat
     was changed
    :type last_state_change_date_time: datetime
    :param detection_count: Number of times the malware is detected
    :type detection_count: int
    :param category: Possible values include: 'invalid', 'adware', 'spyware',
     'passwordStealer', 'trojanDownloader', 'worm', 'backdoor',
     'remoteAccessTrojan', 'trojan', 'emailFlooder', 'keylogger', 'dialer',
     'monitoringSoftware', 'browserModifier', 'cookie', 'browserPlugin',
     'aolExploit', 'nuker', 'securityDisabler', 'jokeProgram',
     'hostileActiveXControl', 'softwareBundler', 'stealthNotifier',
     'settingsModifier', 'toolBar', 'remoteControlSoftware', 'trojanFtp',
     'potentialUnwantedSoftware', 'icqExploit', 'trojanTelnet', 'exploit',
     'filesharingProgram', 'malwareCreationTool', 'remote_Control_Software',
     'tool', 'trojanDenialOfService', 'trojanDropper', 'trojanMassMailer',
     'trojanMonitoringSoftware', 'trojanProxyServer', 'virus', 'known',
     'unknown', 'spp', 'behavior', 'vulnerability', 'policy',
     'enterpriseUnwantedSoftware', 'ransom', 'hipsRule'
    :type category: str or ~users.models.enum
    """

    _validation = {
        'detection_count': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'display_name': {'key': 'displayName', 'type': 'str'},
        'additional_information_url': {'key': 'additionalInformationUrl', 'type': 'str'},
        'severity': {'key': 'severity', 'type': 'str'},
        'catetgory': {'key': 'catetgory', 'type': 'str'},
        'execution_state': {'key': 'executionState', 'type': 'str'},
        'state': {'key': 'state', 'type': 'str'},
        'threat_state': {'key': 'threatState', 'type': 'str'},
        'initial_detection_date_time': {'key': 'initialDetectionDateTime', 'type': 'iso-8601'},
        'last_state_change_date_time': {'key': 'lastStateChangeDateTime', 'type': 'iso-8601'},
        'detection_count': {'key': 'detectionCount', 'type': 'int'},
        'category': {'key': 'category', 'type': 'str'},
    }

    def __init__(self, display_name=None, additional_information_url=None, severity=None, catetgory=None, execution_state=None, state=None, threat_state=None, initial_detection_date_time=None, last_state_change_date_time=None, detection_count=None, category=None):
        super(ComponentsschemasmicrosoftGraphWindowsdevicemalwarestateallof1, self).__init__()
        self.display_name = display_name
        self.additional_information_url = additional_information_url
        self.severity = severity
        self.catetgory = catetgory
        self.execution_state = execution_state
        self.state = state
        self.threat_state = threat_state
        self.initial_detection_date_time = initial_detection_date_time
        self.last_state_change_date_time = last_state_change_date_time
        self.detection_count = detection_count
        self.category = category
