# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Microsoftgraphperson(Model):
    """Microsoftgraphperson.

    :param id:
    :type id: str
    :param display_name:
    :type display_name: str
    :param given_name:
    :type given_name: str
    :param surname:
    :type surname: str
    :param birthday:
    :type birthday: str
    :param person_notes:
    :type person_notes: str
    :param is_favorite:
    :type is_favorite: bool
    :param email_addresses:
    :type email_addresses:
     list[~users.models.MicrosoftgraphrankedEmailAddress]
    :param phones:
    :type phones: list[~users.models.Microsoftgraphphone]
    :param postal_addresses:
    :type postal_addresses: list[~users.models.Microsoftgraphlocation]
    :param websites:
    :type websites: list[~users.models.Microsoftgraphwebsite]
    :param title:
    :type title: str
    :param company_name:
    :type company_name: str
    :param yomi_company:
    :type yomi_company: str
    :param department:
    :type department: str
    :param office_location:
    :type office_location: str
    :param profession:
    :type profession: str
    :param sources:
    :type sources: list[~users.models.MicrosoftgraphpersonDataSource]
    :param mailbox_type:
    :type mailbox_type: str
    :param person_type:
    :type person_type: str
    :param user_principal_name:
    :type user_principal_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'given_name': {'key': 'givenName', 'type': 'str'},
        'surname': {'key': 'surname', 'type': 'str'},
        'birthday': {'key': 'birthday', 'type': 'str'},
        'person_notes': {'key': 'personNotes', 'type': 'str'},
        'is_favorite': {'key': 'isFavorite', 'type': 'bool'},
        'email_addresses': {'key': 'emailAddresses', 'type': '[MicrosoftgraphrankedEmailAddress]'},
        'phones': {'key': 'phones', 'type': '[Microsoftgraphphone]'},
        'postal_addresses': {'key': 'postalAddresses', 'type': '[Microsoftgraphlocation]'},
        'websites': {'key': 'websites', 'type': '[Microsoftgraphwebsite]'},
        'title': {'key': 'title', 'type': 'str'},
        'company_name': {'key': 'companyName', 'type': 'str'},
        'yomi_company': {'key': 'yomiCompany', 'type': 'str'},
        'department': {'key': 'department', 'type': 'str'},
        'office_location': {'key': 'officeLocation', 'type': 'str'},
        'profession': {'key': 'profession', 'type': 'str'},
        'sources': {'key': 'sources', 'type': '[MicrosoftgraphpersonDataSource]'},
        'mailbox_type': {'key': 'mailboxType', 'type': 'str'},
        'person_type': {'key': 'personType', 'type': 'str'},
        'user_principal_name': {'key': 'userPrincipalName', 'type': 'str'},
    }

    def __init__(self, id=None, display_name=None, given_name=None, surname=None, birthday=None, person_notes=None, is_favorite=None, email_addresses=None, phones=None, postal_addresses=None, websites=None, title=None, company_name=None, yomi_company=None, department=None, office_location=None, profession=None, sources=None, mailbox_type=None, person_type=None, user_principal_name=None):
        super(Microsoftgraphperson, self).__init__()
        self.id = id
        self.display_name = display_name
        self.given_name = given_name
        self.surname = surname
        self.birthday = birthday
        self.person_notes = person_notes
        self.is_favorite = is_favorite
        self.email_addresses = email_addresses
        self.phones = phones
        self.postal_addresses = postal_addresses
        self.websites = websites
        self.title = title
        self.company_name = company_name
        self.yomi_company = yomi_company
        self.department = department
        self.office_location = office_location
        self.profession = profession
        self.sources = sources
        self.mailbox_type = mailbox_type
        self.person_type = person_type
        self.user_principal_name = user_principal_name
