# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Microsoftgraphaudio(Model):
    """audio.

    :param album:
    :type album: str
    :param album_artist:
    :type album_artist: str
    :param artist:
    :type artist: str
    :param bitrate:
    :type bitrate: long
    :param composers:
    :type composers: str
    :param copyright:
    :type copyright: str
    :param disc:
    :type disc: int
    :param disc_count:
    :type disc_count: int
    :param duration:
    :type duration: long
    :param genre:
    :type genre: str
    :param has_drm:
    :type has_drm: bool
    :param is_variable_bitrate:
    :type is_variable_bitrate: bool
    :param title:
    :type title: str
    :param track:
    :type track: int
    :param track_count:
    :type track_count: int
    :param year:
    :type year: int
    """

    _validation = {
        'disc': {'maximum': 32767, 'minimum': -32768},
        'disc_count': {'maximum': 32767, 'minimum': -32768},
        'track': {'maximum': 2147483647, 'minimum': -2147483648},
        'track_count': {'maximum': 2147483647, 'minimum': -2147483648},
        'year': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'album': {'key': 'album', 'type': 'str'},
        'album_artist': {'key': 'albumArtist', 'type': 'str'},
        'artist': {'key': 'artist', 'type': 'str'},
        'bitrate': {'key': 'bitrate', 'type': 'long'},
        'composers': {'key': 'composers', 'type': 'str'},
        'copyright': {'key': 'copyright', 'type': 'str'},
        'disc': {'key': 'disc', 'type': 'int'},
        'disc_count': {'key': 'discCount', 'type': 'int'},
        'duration': {'key': 'duration', 'type': 'long'},
        'genre': {'key': 'genre', 'type': 'str'},
        'has_drm': {'key': 'hasDrm', 'type': 'bool'},
        'is_variable_bitrate': {'key': 'isVariableBitrate', 'type': 'bool'},
        'title': {'key': 'title', 'type': 'str'},
        'track': {'key': 'track', 'type': 'int'},
        'track_count': {'key': 'trackCount', 'type': 'int'},
        'year': {'key': 'year', 'type': 'int'},
    }

    def __init__(self, album=None, album_artist=None, artist=None, bitrate=None, composers=None, copyright=None, disc=None, disc_count=None, duration=None, genre=None, has_drm=None, is_variable_bitrate=None, title=None, track=None, track_count=None, year=None):
        super(Microsoftgraphaudio, self).__init__()
        self.album = album
        self.album_artist = album_artist
        self.artist = artist
        self.bitrate = bitrate
        self.composers = composers
        self.copyright = copyright
        self.disc = disc
        self.disc_count = disc_count
        self.duration = duration
        self.genre = genre
        self.has_drm = has_drm
        self.is_variable_bitrate = is_variable_bitrate
        self.title = title
        self.track = track
        self.track_count = track_count
        self.year = year
