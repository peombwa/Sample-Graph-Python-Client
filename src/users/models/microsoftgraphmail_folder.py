# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MicrosoftgraphmailFolder(Model):
    """MicrosoftgraphmailFolder.

    :param id:
    :type id: str
    :param display_name:
    :type display_name: str
    :param parent_folder_id:
    :type parent_folder_id: str
    :param child_folder_count:
    :type child_folder_count: int
    :param unread_item_count:
    :type unread_item_count: int
    :param total_item_count:
    :type total_item_count: int
    :param well_known_name:
    :type well_known_name: str
    :param single_value_extended_properties:
    :type single_value_extended_properties:
     list[~users.models.MicrosoftgraphsingleValueLegacyExtendedProperty]
    :param multi_value_extended_properties:
    :type multi_value_extended_properties:
     list[~users.models.MicrosoftgraphmultiValueLegacyExtendedProperty]
    :param messages:
    :type messages: list[~users.models.Microsoftgraphmessage]
    :param message_rules:
    :type message_rules: list[~users.models.MicrosoftgraphmessageRule]
    :param child_folders:
    :type child_folders: list[~users.models.MicrosoftgraphmailFolder]
    :param user_configurations:
    :type user_configurations:
     list[~users.models.MicrosoftgraphuserConfiguration]
    """

    _validation = {
        'child_folder_count': {'maximum': 2147483647, 'minimum': -2147483648},
        'unread_item_count': {'maximum': 2147483647, 'minimum': -2147483648},
        'total_item_count': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'parent_folder_id': {'key': 'parentFolderId', 'type': 'str'},
        'child_folder_count': {'key': 'childFolderCount', 'type': 'int'},
        'unread_item_count': {'key': 'unreadItemCount', 'type': 'int'},
        'total_item_count': {'key': 'totalItemCount', 'type': 'int'},
        'well_known_name': {'key': 'wellKnownName', 'type': 'str'},
        'single_value_extended_properties': {'key': 'singleValueExtendedProperties', 'type': '[MicrosoftgraphsingleValueLegacyExtendedProperty]'},
        'multi_value_extended_properties': {'key': 'multiValueExtendedProperties', 'type': '[MicrosoftgraphmultiValueLegacyExtendedProperty]'},
        'messages': {'key': 'messages', 'type': '[Microsoftgraphmessage]'},
        'message_rules': {'key': 'messageRules', 'type': '[MicrosoftgraphmessageRule]'},
        'child_folders': {'key': 'childFolders', 'type': '[MicrosoftgraphmailFolder]'},
        'user_configurations': {'key': 'userConfigurations', 'type': '[MicrosoftgraphuserConfiguration]'},
    }

    def __init__(self, id=None, display_name=None, parent_folder_id=None, child_folder_count=None, unread_item_count=None, total_item_count=None, well_known_name=None, single_value_extended_properties=None, multi_value_extended_properties=None, messages=None, message_rules=None, child_folders=None, user_configurations=None):
        super(MicrosoftgraphmailFolder, self).__init__()
        self.id = id
        self.display_name = display_name
        self.parent_folder_id = parent_folder_id
        self.child_folder_count = child_folder_count
        self.unread_item_count = unread_item_count
        self.total_item_count = total_item_count
        self.well_known_name = well_known_name
        self.single_value_extended_properties = single_value_extended_properties
        self.multi_value_extended_properties = multi_value_extended_properties
        self.messages = messages
        self.message_rules = message_rules
        self.child_folders = child_folders
        self.user_configurations = user_configurations
