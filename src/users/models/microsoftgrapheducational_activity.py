# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MicrosoftgrapheducationalActivity(Model):
    """MicrosoftgrapheducationalActivity.

    :param id:
    :type id: str
    :param allowed_audiences: Possible values include: 'me', 'family',
     'contacts', 'groupMembers', 'organization', 'federatedOrganizations',
     'everyone', 'unknownFutureValue'
    :type allowed_audiences: str or ~users.models.enum
    :param inference:
    :type inference: ~users.models.MicrosoftgraphinferenceData
    :param created_date_time:
    :type created_date_time: datetime
    :param created_by:
    :type created_by: ~users.models.MicrosoftgraphidentitySet
    :param last_modified_date_time:
    :type last_modified_date_time: datetime
    :param last_modified_by:
    :type last_modified_by: ~users.models.MicrosoftgraphidentitySet
    :param completion_month_year:
    :type completion_month_year: date
    :param end_month_year:
    :type end_month_year: date
    :param institution:
    :type institution: ~users.models.MicrosoftgraphinstitutionData
    :param program:
    :type program: ~users.models.MicrosoftgrapheducationalActivityDetail
    :param start_month_year:
    :type start_month_year: date
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'inference': {'key': 'inference', 'type': 'MicrosoftgraphinferenceData'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'created_by': {'key': 'createdBy', 'type': 'MicrosoftgraphidentitySet'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'last_modified_by': {'key': 'lastModifiedBy', 'type': 'MicrosoftgraphidentitySet'},
        'completion_month_year': {'key': 'completionMonthYear', 'type': 'date'},
        'end_month_year': {'key': 'endMonthYear', 'type': 'date'},
        'institution': {'key': 'institution', 'type': 'MicrosoftgraphinstitutionData'},
        'program': {'key': 'program', 'type': 'MicrosoftgrapheducationalActivityDetail'},
        'start_month_year': {'key': 'startMonthYear', 'type': 'date'},
    }

    def __init__(self, id=None, allowed_audiences=None, inference=None, created_date_time=None, created_by=None, last_modified_date_time=None, last_modified_by=None, completion_month_year=None, end_month_year=None, institution=None, program=None, start_month_year=None):
        super(MicrosoftgrapheducationalActivity, self).__init__()
        self.id = id
        self.allowed_audiences = allowed_audiences
        self.inference = inference
        self.created_date_time = created_date_time
        self.created_by = created_by
        self.last_modified_date_time = last_modified_date_time
        self.last_modified_by = last_modified_by
        self.completion_month_year = completion_month_year
        self.end_month_year = end_month_year
        self.institution = institution
        self.program = program
        self.start_month_year = start_month_year
